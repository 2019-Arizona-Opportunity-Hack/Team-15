{"version":3,"sources":["components/FirstCreateFormScreen.js","components/SecondCreateFormScreen.js","components/ThirdCreateFormScreen.js","components/FourCreateFormScreen.js","pages/PageTemplate.js","components/SummaryScreen.js","pages/CreateUserPage.js","pages/CustomerSplashScreen.js","pages/CustomerViewPage.js","pages/FourOrFourError.js","pages/CustomerLoginPage.js","components/App.js","serviceWorker.js","index.js"],"names":["FirstCreateFormScreen","state","form1","familyName","firstName","lastName","dob","addressLine1","addressLine2","zipcode","phNo","gender","housingType","maritalStatus","onSubmit","bind","handleChange","next","event","preventDefault","this","props","handler","changeButton","propertyName","contact","target","value","setState","Row","className","Col","Form","Control","type","name","onChange","placeholder","required","id","as","selected","disabled","hidden","Button","onClick","previous","Component","SecondCreateFormScreen","form2","highestEducation","primaryLanguage","Check","label","ThirdCreateFormScreen","form3","medicalInsType","insuranceHave","childCareType","employeeType","primaryDoctor","none","FourCreateFormScreen","form4","monthlyIncome","incomeType","visbilityFun","console","log","vaue","PageTemplate","children","Navbar","bg","variant","Brand","to","Container","SummaryScreen","SwitchCard","curIndex","CreateUserPage","formData","currentSlideIndex","returnCurrentSlide","visbility","currentSlide","onCancel","number","history","push","pathname","submittedor","fetch","HOSTNAME","method","headers","body","JSON","stringify","alert","obj","stateObj","prop","nestedObj","key","CustomerSplashScreen","style","marginTop","textAlign","block","QRCode","require","CustomerViewPage","visitedDate","vistsLeft","badrequest","visitId","visitationData","location","dov","err","FourOrFourError","CustomerLoginPage","visitationForm","visitationType","then","response","json","responseJson","isError","errorMsg","resObj","stringuser","Group","controlId","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d208777.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Form, Button} from 'react-bootstrap';\r\nimport {FaArrowLeft, FaArrowRight} from 'react-icons/fa';\r\n\r\n\r\nexport default class FirstCreateFormScreen extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form1: {\r\n                familyName: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                dob: '',\r\n                addressLine1: '',\r\n                addressLine2: '',\r\n                zipcode: '',\r\n                phNo: '',\r\n                gender: '',\r\n                housingType: '',\r\n                maritalStatus: ''\r\n            }\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.next = this.next.bind(this);\r\n    }\r\n\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        this.props.handler(this.state);\r\n    }\r\n    next(event){\r\n        event.preventDefault();\r\n        this.props.handler(this.state);\r\n        this.props.changeButton(1);\r\n    }\r\n\r\n    handleChange(propertyName, event) {\r\n        const contact = this.state.form1;\r\n        contact[propertyName] = event.target.value;\r\n        this.setState({ form1: contact });\r\n    }\r\n\r\n    handleOptionChange(event) {\r\n        this.setState({\r\n            form1: {\r\n                maritalStatus: event.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"w-100\">\r\n                <Col>\r\n                    <h2 className=\"text-center\">First Step</h2>\r\n                    <Form className=\"d-flex flex-column justify-content-center\">\r\n                        <Form.Control type=\"text\" name=\"familyName\" value={this.state.form1.familyName} onChange={this.handleChange.bind(this, 'familyName')} className=\"input-create-control mb-3\" placeholder=\"Family Name\" required />\r\n                        <Form.Control type=\"text\" name=\"firstname\" value={this.state.form1.firstName} onChange={this.handleChange.bind(this, 'firstName')} className=\"input-create-control mb-3\" placeholder=\"First Name\" required />\r\n                        <Form.Control type=\"text\" name=\"lastname\" value={this.state.form1.lastName} onChange={this.handleChange.bind(this, 'lastName')} className=\"input-create-control mb-3\" placeholder=\"Last Name\" required />\r\n                        <Form.Control type=\"date\" name=\"dateofbirth\" value={this.state.form1.dob} onChange={this.handleChange.bind(this, 'dob')} className=\"input-create-control mb-3\" required />\r\n                        <Form.Control type=\"text\" name=\"address\" value={this.state.form1.addressLine1} onChange={this.handleChange.bind(this, 'addressLine1')} className=\"input-create-control mb-3\" placeholder=\"123 easy street\" required />\r\n                        <Form.Control type=\"text\" name=\"apartment\" value={this.state.form1.addressLine2} onChange={this.handleChange.bind(this, 'addressLine2')} className=\"input-create-control mb-3\" placeholder=\"apartment 1234\" required />\r\n                        <Form.Control type=\"text\" name=\"zipcode\" id=\"create-zipcode\" value={this.state.form1.zipcode} onChange={this.handleChange.bind(this, 'zipcode')} className=\"input-create-control mb-3\" placeholder=\"zipcode\" required />\r\n                        <Form.Control type=\"text\" name=\"phonenumber\" id=\"phNo\" value={this.state.form1.phNo} onChange={this.handleChange.bind(this, 'phNo')} className=\"input-create-control mb-3\" placeholder=\"123-456-7890\" required />\r\n                        <Form.Control as=\"select\" name=\"gender\" value={this.state.form1.gender} onChange={this.handleChange.bind(this, 'gender')} className=\"input-create-control mb-3\" required>\r\n                            <option value=\"\" selected disabled hidden>Select your gender</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"housingtype\" value={this.state.form1.housingType} onChange={this.handleChange.bind(this, 'housingType')} className=\"input-create-control mb-3\" required>\r\n                            <option value=\"\" selected disabled hidden>Choose your housing type</option>\r\n                            <option value=\"ergency\">Emergency Housing Shelter/Mission/Transistional</option>\r\n                            <option value=\"evacuee\">Evacuee</option>\r\n                            <option value=\"ownhome\">Own Home</option>\r\n                            <option value=\"privaterental\">Private Rental</option>\r\n                            <option value=\"publichousing\">public housing</option>\r\n                            <option value=\"undisclosed\">Undisclosed</option>\r\n                            <option value=\"unhoused\">Unhoused</option>\r\n                            <option value=\"withfamily\">With family/friends</option>\r\n                            <option value=\"youthhome\">Youth Home/Shelter</option>\r\n                            <option value=\"refugee\">Refugee</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"marital-status\"  value={this.state.form1.housingType} onChange={this.handleChange.bind(this, 'maritalStatus')} className=\"input-create-control mb-3\" required>\r\n                            <option value=\"\" selected disabled hidden>Choose your martial status</option>\r\n                            <option value=\"single\">Single</option>\r\n                            <option value=\"married\">Married</option>\r\n                            <option value=\"divorced\">Divorced</option>\r\n                            <option value=\"seperated\">Seperated</option>\r\n                            <option value=\"windowed\">Windowed</option>\r\n                            <option value=\"undisclosed\">Undisclosed</option>\r\n                        </Form.Control>\r\n                        <div className=\"input-create-control d-flex justify-content-center\">\r\n                            <Button onClick={this.previous} className=\"mr-2 button-create-slide hide-button\"><FaArrowLeft />  Previous </Button>\r\n                            <Button onClick={this.next} className=\"button-create-slide\">Next <FaArrowRight /></Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport {FaArrowLeft, FaArrowRight} from 'react-icons/fa';\r\n\r\n\r\nexport default class SecondCreateFormScreen extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form2: {\r\n                highestEducation: '',\r\n                primaryLanguage: ''\r\n            }\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        //this.props.handler(this.state);\r\n    }\r\n    next(event) {\r\n        event.preventDefault();\r\n        this.props.handler(this.state);\r\n        this.props.changeButton(2);\r\n    }\r\n    previous(event){\r\n        event.preventDefault();\r\n        this.props.changeButton(0)\r\n    }\r\n\r\n    handleChange(propertyName, event) {\r\n        const contact = this.state.form2;\r\n        contact[propertyName] = event.target.value;\r\n        this.setState({ form2: contact });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"w-100\">\r\n                <Col>\r\n                    <h2 className=\"text-center\">Second Step</h2>\r\n                    <Form onSubmit={this.onSubmit} className=\"d-flex flex-column justify-content-center\">\r\n                        <span className=\"input-checkmark\">Ethncity</span>\r\n                        <Form.Check name=\"ethnicity\" value=\"White/Anglo\" label=\"White/Anglo\" className=\"input-checkmark\" />\r\n                        <Form.Check name=\"ethnicity\" value=\"Hispanic/Latino\" label=\"Hispanic/Latino\" className=\"input-checkmark\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"American indian / Native American\" label=\"American Indian/Native American\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Asian\" label=\"Asian\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Aslaska Native / Aleut / Eskimo\" label=\"Aslaka/Aleut/ Eskimo\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Middle Eastern/ North African\" label=\"Middle Eastern / North African\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Pacific Islander\" label=\"Pacific Islander\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Other\" label=\"Other\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"ethnicity\" value=\"Undisclosed\" label=\"Undisclosed\" />\r\n                        <span className=\"input-checkmark mt-2\" >Self Identify As</span>\r\n                        <Form.Check name=\"self-identify\" value=\"Disability\" label=\"Disability\" className=\"input-checkmark\" />\r\n                        <Form.Check name=\"self-identify\" value=\"Veteran\" label=\"Veteran\" className=\"input-checkmark\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"metal illness\" label=\"Mental Illness\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Pregnant\" label=\"Pregnant\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Postpartum\" label=\"Postpartum\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Breastfeeding\" label=\"Breast Feeding\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Undisclosed\" label=\"Undisclosed\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Other\" label=\"Other\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Eldery\" label=\"Eldery (62+)\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"LGBTQ\" label=\"LGBTQ\" />\r\n                        <Form.Check className=\"input-checkmark\" name=\"self-identify\" value=\"Female head of household\" label=\"Female head of household\" />\r\n                        <Form.Control as=\"select\" name=\"highest-education\" value={this.state.form2.highestEducation} onChange={this.handleChange.bind(this, 'highestEducation')} className=\"input-checkmark mt-2 mb-2\">\r\n                            <option value=\"\" selected disabled hidden>What's your education level?</option>\r\n                            <option value=\"grade08\">Grade 0-8</option>\r\n                            <option value=\"grade911\">Grade 9-11</option>\r\n                            <option value=\"highschooldiploma\">High School Diploma</option>\r\n                            <option value=\"ged\">GED</option>\r\n                            <option value=\"postsecondary\">Post Secondary</option>\r\n                            <option value=\"tradeschool\">Trade School</option>\r\n                            <option value=\"twoyeardegree\">2 year degree</option>\r\n                            <option value=\"fouryeardegree\">4 year degree</option>\r\n                            <option value=\"mastersdegree\">Masters degree</option>\r\n                            <option value=\"phd\">Phd</option>\r\n                            <option value=\"undisclosed\">Undisclosed</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"primary-language\" value={this.state.form2.primaryLanguage} onChange={this.handleChange.bind(this, 'primaryLanguage')} className=\"input-checkmark mb-2\">\r\n                            <option value=\"\" selected disabled hidden>Choose your primary language</option>\r\n                            <option value=\"english\">English</option>\r\n                            <option value=\"spanish\">Spanish</option>\r\n                            <option value=\"other\">Other</option>\r\n                        </Form.Control>\r\n                        <div className=\"input-create-control d-flex justify-content-center\">\r\n                            <Button onClick={this.previous} className=\"mr-2 button-create-slide\"><FaArrowLeft />  Previous </Button>\r\n                            <Button onClick={this.next} className=\"button-create-slide\">Next <FaArrowRight /></Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row >\r\n\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport {FaArrowLeft, FaArrowRight} from 'react-icons/fa';\r\n\r\nexport default class ThirdCreateFormScreen extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form3: {\r\n                medicalInsType: '',\r\n                insuranceHave: '',\r\n                childCareType: '',\r\n                employeeType: '',\r\n                primaryDoctor: '',\r\n\r\n            }\r\n\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        //this.props.handler(this.state);\r\n    }\r\n    next(event) {\r\n        event.preventDefault();\r\n        this.props.handler(this.state);\r\n        this.props.changeButton(3);\r\n    }\r\n    previous(event){\r\n        event.preventDefault();\r\n        this.props.changeButton(1);\r\n    }\r\n\r\n    handleChange(propertyName, event) {\r\n        const contact = this.state.form3;\r\n        contact[propertyName] = event.target.value;\r\n        this.setState({ form3: contact });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"w-100\">\r\n                <Col>\r\n                    <h3 className=\"text-center\">Third Step</h3>\r\n                    <Form onSubmit={this.onSubmit} className=\"d-flex flex-column justify-content-center\">\r\n                        <Form.Control as=\"select\" name=\"insurancehave\" value={this.state.form3.insuranceHave} onChange={this.handleChange.bind(this, 'insuranceHave')} className=\"input-create-control mb-3\">\r\n                            <option value=\"\" selected disabled hidden>Do you have insurance?</option>\r\n                            <option value=\"Yes\">Yes</option>\r\n                            <option value=\"No\">No</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"primaryDoctor\" value={this.state.form3.primaryDoctor} onChange={this.handleChange.bind(this, 'primaryDoctor')} className=\"input-create-control mb-3\">\r\n                            <option value=\"\" selected disabled hidden> Do you have a primary care doctor?</option>\r\n                            <option value=\"yes\">Yes</option>\r\n                            <option value=\"no\">No</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"medicaltype\" value={this.state.form3.medicalInsType} onChange={this.handleChange.bind(this, 'medicalInsType')} className=\"input-create-control mb-3\">\r\n                            <option value=\"\" selected disabled hidden>What type of insurance do you have?</option>\r\n                            <option value=\"employer\">Employer</option>\r\n                            <option value=\"private\">Private</option>\r\n                            <option value=\"ahcss\">ahcss</option>\r\n                            <option value=\"indianhealthservices\">Indian Health Services</option>\r\n                            <option value=\"militarty\">Military</option>\r\n                            <option value=\"none\">none</option>\r\n                            <option value=\"other\">other</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"childCareType\" value={this.state.form3.childCareType} onChange={this.handleChange.bind(this, 'childCareType')}className=\"input-create-control mb-3\">\r\n                            <option value=\"mypartnerori\">My partner or I take care of my children at home</option>\r\n                            <option value=\"headstart\">Headstart</option>\r\n                            <option value=\"childcarecenter\">Child Care Center/ Preschool Program</option>\r\n                            <option value=\"familychildcarehome\">Family Child Care Home</option>\r\n                            <option value=\"relativeneighbor\">Relative/Neighbor or babysitter</option>\r\n                        </Form.Control>\r\n                        <Form.Control as=\"select\" name=\"emplyoeType\" value={this.state.form3.employeeType} onChange={this.handleChange.bind(this, 'employeeType')}className=\"input-create-control mb-3\">\r\n                            <option value=\"\" selected disabled none>Do you have a job?</option>\r\n                            <option value=\"postsecondarystudent\">Post Secondary Student</option>\r\n                            <option value=\"fulltime\">Full Time</option>\r\n                            <option value=\"parttime\">Part Time</option>\r\n                            <option value=\"retired\">Retired</option>\r\n                            <option value=\"none\">None</option>\r\n                            <option value=\"undisclosed\">Undisclosed</option>\r\n                            <option value=\"other\">Other</option>\r\n                        </Form.Control>\r\n                        <div className=\"input-create-control d-flex justify-content-center\">\r\n                            <Button onClick={this.previous} className=\"mr-2 button-create-slide\"><FaArrowLeft />  Previous </Button>\r\n                            <Button onClick={this.next} className=\"button-create-slide\">Next <FaArrowRight /></Button>\r\n                        </div>\r\n                    </Form>\r\n               \r\n                </Col>\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Form, Button } from 'react-bootstrap';\r\nimport {FaArrowRight, FaArrowLeft} from 'react-icons/fa';\r\n\r\nexport default class FourCreateFormScreen extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form4: {\r\n                monthlyIncome: '',\r\n                incomeType: ''\r\n            }\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.next = this.next.bind(this);\r\n        this.previous = this.previous.bind(this);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        //this.props.handler(this.state);\r\n    }\r\n\r\n    next(event) {\r\n        event.preventDefault();\r\n        this.props.handler(this.state);\r\n        this.props.changeButton(4);\r\n        this.props.visbilityFun(event);\r\n    }\r\n    previous(event){\r\n        event.preventDefault();\r\n        this.props.changeButton(2);\r\n    }\r\n\r\n    handleChange(propertyName, event) {\r\n        // event.preventDefault();\r\n        console.log(\"event::\", event);\r\n        const contact = this.state.form4;\r\n        contact[propertyName] = event.target.value;\r\n        this.setState({ form4: contact });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"w-100\">\r\n                <Col>\r\n                    <h2 className=\"text-center\">Fourth Step</h2>\r\n                    <Form onSubmit={this.onSubmit} className=\"d-flex flex-column justify-content-center\">\r\n                        <Form.Control type=\"text\" name=\"monthlyamount\" placeholder=\"Monthly Amount\" value={this.state.form4.monthlyIncome} onChange={this.handleChange.bind(this, 'monthlyincome')} className=\"input-create-control mb-3\" required />\r\n                        <Form.Control as=\"select\" name=\"incometype\" value={this.state.form4.monthlyIncome} onChange={this.handleChange.bind(this, 'incomeType')} className=\"input-create-control mb-3\">\r\n                            <option value=\"\" selected disabled hidden>Choose your income type</option>\r\n                            <option value=\"csfp\" >Commodity Supplement Food Program (CSFP)</option>\r\n                            <option value=\"wic\" > Supplemental Assistance WIC</option>\r\n                            <option value=\"snap\" >Supplemental Nurtition Assistance Proram (SNAP)</option>\r\n                            <option vaue=\"tanf\" >Cash Assistant (TANF)</option>\r\n                            <option value=\"deschildcare\" >DES Child Care Subsidy</option>\r\n                            <option value=\"qualityfirstscholarship\" >Quality First Scholarship</option>\r\n                            <option value=\"other\" >Other</option>\r\n                        </Form.Control>\r\n                        <div className=\"input-create-control d-flex justify-content-center\">\r\n                            <Button onClick={this.previous} className=\"mr-2 button-create-slide\"><FaArrowLeft />  Previous </Button>\r\n                            <Button onClick={this.next} className=\"button-create-slide\">Next <FaArrowRight /></Button>\r\n                        </div>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Container, Row,Col } from 'react-bootstrap'\r\nimport { Nav, Navbar } from  'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst PageTemplate = ({ children }) => (\r\n    <div id=\"page-template\">\r\n        <Navbar bg=\"primary\" variant=\"dark\">\r\n    <Navbar.Brand><Link to=\"/\">Chandler Care Center</Link> </Navbar.Brand>\r\n    {/* <Nav className=\"mr-auto\">\r\n    </Nav> */}\r\n  </Navbar>\r\n        <Container>\r\n            <Row id=\"logo-header\">\r\n                <Col></Col>\r\n            </Row>\r\n            {children}\r\n        </Container>\r\n    </div>\r\n);\r\n\r\nexport default PageTemplate;","import React, { Component } from 'react';\r\nimport {Row,Col} from 'react-bootstrap';\r\n\r\nexport default class SummaryScreen extends Component {\r\n    render() {\r\n        return (\r\n            <Row className=\"w-100\">\r\n                <Col>\r\n                    <div className=\"input-create-control\">\r\n                    <p>Last Name:  {/* this.props.summary.lastName */}</p>\r\n                    <p>First Name: { /* this.props.summary.firstName */}</p>\r\n                    <p>Date of Birth: {/* this.props.summary.dob */}</p>\r\n                    <p>Address: {/* this.props.summary.address */}</p>\r\n                    <p>Apart Number: {/* this.props.summary.arptNum */}</p>\r\n                    <p>Zip Code: {/*this.props.summary.zipcode */}</p>\r\n                    <p>Phone number: {/* this.props.summary.phonenumber} */}</p>\r\n                    <p>Gender: {/* this.props.summary.gender */}</p>\r\n                    <p>Housing Type: {/* this.props.summary.maritalstatus */}</p>\r\n                    <p>Maritaul status: {/* */}</p>\r\n                    <p>Ethnicity: {/* */}</p>\r\n                    <p>Self Identify: {/* */}</p>\r\n                    <p>Education Level: {/* */} </p>\r\n                    <p>Primary Language: {/* */}</p>\r\n                    <p>Have Insurance: {/*  */}</p>\r\n                    <p>Have Primary Care Doctor: {/* */}</p>\r\n                    <p>Take Care of Children: {/* */}</p>\r\n                    <p>Have A Job: {/* */}</p>\r\n                    <p>Monthly Income: {/* */}</p>\r\n                    <p>Income Type: {/* */}</p>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport FirstCreateFormScreen from '../components/FirstCreateFormScreen'\r\nimport SecondCreateFormScreen from '../components/SecondCreateFormScreen'\r\nimport ThirdCreateFormScreen from '../components/ThirdCreateFormScreen'\r\nimport FourCreateFormScreen from '../components/FourCreateFormScreen'\r\nimport PageTemplate from './PageTemplate';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { FaUserPlus } from 'react-icons/fa';\r\nimport SummaryScreen from '../components/SummaryScreen';\r\n\r\nconst HOSTNAME = \"http://localhost:5000/api\";\r\n\r\n\r\n//switch for current slide\r\nconst SwitchCard = ({ curIndex, changeButton, handler, visbilityFun }) => {\r\n\r\n    switch (curIndex) {\r\n        case 0:\r\n            return (<FirstCreateFormScreen changeButton={changeButton} handler={handler} />)\r\n        case 1:\r\n            return (<SecondCreateFormScreen changeButton={changeButton} handler={handler} />)\r\n        case 2:\r\n            return (<ThirdCreateFormScreen changeButton={changeButton} handler={handler} />)\r\n        case 3:\r\n            return (<FourCreateFormScreen changeButton={changeButton} visbilityFun={visbilityFun} handler={handler} />);\r\n        case 4:\r\n            return(<SummaryScreen handler={handler} />)\r\n        default:\r\n            return (\r\n                <div>\r\n                    <FirstCreateFormScreen />\r\n                    <SecondCreateFormScreen />\r\n                    <ThirdCreateFormScreen />\r\n                    <FourCreateFormScreen />\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default class CreateUserPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            formData: {},\r\n            currentSlideIndex: 0,\r\n            returnCurrentSlide: {},\r\n            visbility: \"hide-button\"\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.currentSlide = this.currentSlide.bind(this);\r\n        this.visbilityFun = this.visbilityFun.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n    }\r\n\r\n    //stack -> keep current state\r\n    //switch for render component\r\n\r\n\r\n    currentSlide(number) {\r\n        this.setState({\r\n            currentSlideIndex: number\r\n        })\r\n    }\r\n\r\n    onCancel(event){\r\n        event.preventDefault();\r\n        this.props.history.push({\r\n            pathname:\"/login\"\r\n        })\r\n    }\r\n    //on Submit\r\n    onSubmit(event) {\r\n\r\n        this.setState({\r\n            submittedor: \"Data Attempted to submit\"\r\n        })\r\n        console.log(this.state);\r\n        fetch(HOSTNAME + '/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        });\r\n        alert(\"Success\");\r\n        this.props.history.push({\r\n            pathname: \"/login\"\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    //Handler Function\r\n    handler(obj) {\r\n        let stateObj = this.state.formData;\r\n        for (var prop in obj) {\r\n            const nestedObj = obj[prop]\r\n            for (var key in nestedObj) {\r\n                stateObj[key] = nestedObj[key];\r\n            }\r\n\r\n        }\r\n        this.setState({ formData: stateObj });\r\n    }\r\n    \r\n    visbilityFun(event){\r\n        event.preventDefault();\r\n        this.setState({\r\n            visbility: \"show-button\"\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <PageTemplate>\r\n                {/* <form onSubmit={this.onSubmit}> */}\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"splash-screen\">\r\n                            <Row>\r\n                                <Col><span className=\"home-icon\"><FaUserPlus /></span> <h2 className=\"text-center\">Create User Page</h2></Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <SwitchCard curIndex={this.state.currentSlideIndex} changeButton={this.currentSlide} handler={this.handler} visbilityFun={this.visbilityFun} />\r\n                            </Row>\r\n                            <Row className=\"w-100\">\r\n                                <p></p>\r\n                                <div className=\"d-flex flex-column justify-content-center w-100\">\r\n                                    <button type=\"cancel\" className={\"btn btn-primary input-create-control mb-3 mt-3 \" + this.state.visbility} onClick={this.onCancel}>Cancel</button>\r\n                                    <button type=\"submit\" className={\"btn btn-primary input-create-control \" + this.state.visbility} onClick={this.onSubmit}>Submit</button>\r\n                                </div>\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                {/*  <FirstCreateFormScreen handler={this.handler} />*/}\r\n\r\n                <p>{this.state.submittedor}</p>\r\n                {/* </form> */}\r\n            </PageTemplate>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport PageTemplate from './PageTemplate';\r\nimport {FaHome} from 'react-icons/fa';\r\n\r\nexport default class CustomerSplashScreen extends Component {\r\n    render() {\r\n        return (\r\n            <PageTemplate>\r\n                 <Row>\r\n                    <Col style={{marginTop:\"25%\"}}>\r\n                        <div className=\"splash-screen shadow\">\r\n                            <div className=\"home-icon\" style={{textAlign: \"center\"}}>\r\n                                <FaHome />\r\n                            </div>\r\n                            <h3 style={{textAlign: \"center\"}}>Welcome</h3>\r\n                            <br></br>\r\n                            <div style={{textAlign: \"center\"}}>\r\n                                <Button variant=\"primary\" block> <Link to=\"/newuser\">New User</Link></Button>\r\n                            </div>\r\n                            <br></br>\r\n                            <div style={{textAlign: \"center\"}}>\r\n                                <Button variant=\"primary\" block><Link to=\"/login\">Returning User</Link></Button>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </PageTemplate>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PageTemplate from './PageTemplate';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nvar QRCode = require('qrcode.react')\r\n\r\nclass CustomerViewPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            familyName: \"\",\r\n            visitedDate: \"\",\r\n            vistsLeft: \"\",\r\n            badrequest: false,\r\n            visitId: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            let visitationData = this.props.location.state.visitationData;\r\n            this.setState({\r\n                familyName: visitationData.familyName,\r\n                visitedDate: visitationData.dov,\r\n                visitId: visitationData.visitId\r\n            })\r\n            console.log(this.props.location.state)\r\n\r\n        } catch (err) {\r\n            this.setState({\r\n                badrequest: true\r\n            });\r\n            console.log(\"user did not go through the proper-steps\")\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if (this.state.badrequest) {\r\n            return <Redirect to=\"/whoops\" />\r\n        }\r\n        if (this.state.familyName === \"\") {\r\n            return <PageTemplate><p>Loading</p></PageTemplate>\r\n        } else {\r\n            return (\r\n                <PageTemplate>\r\n                    <div className=\"splash-screen shadow\" style={{textAlign:\"center\"}}>\r\n                        <Row>\r\n                            <Col>\r\n                                <h2>Welcome {this.state.familyName}</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <p>User: {this.state.familyName}</p>\r\n                                <p>Visited Since: {this.state.visitedDate}</p>\r\n                                <p>Vists Left: 1</p>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                            <Row>\r\n                                <Col>\r\n                                    <p>QR Code Scanner</p>\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row>\r\n                                <Col>\r\n                                   <QRCode value={this.state.visitId} />\r\n                                </Col>\r\n                            </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n\r\n                </PageTemplate>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default CustomerViewPage;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class FourOrFourError extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is not the page you are looking for.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PageTemplate from './PageTemplate';\r\nimport { Row, Col, Button, Form } from 'react-bootstrap';\r\nconst HOSTNAME = \"http://localhost:5000/api\"\r\n\r\nexport default class CustomerLoginPage extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            familyName: \"\",\r\n            visitedDate: \"09/20/2019\",\r\n            vistsLeft: \"2\",\r\n            visitationForm: {\r\n                familyName: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                visitationType: '',\r\n                dov: ''\r\n            }\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(propertyName, event) {\r\n        const contact = this.state.visitationForm;\r\n        contact[propertyName] = event.target.value;\r\n        this.setState({ visitationForm: contact });\r\n    }\r\n\r\n    onSubmit(event) {\r\n        const visitationData = this.state.visitationForm;\r\n        console.log(visitationData)\r\n\r\n        if(visitationData.visitationType == \"\"){\r\n            alert(\"Please mention Purpose of visit\");\r\n            return;\r\n        }\r\n            \r\n        event.preventDefault();\r\n        fetch(HOSTNAME +  '/visitation/create',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n              },\r\n            body: JSON.stringify(visitationData)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((responseJson) => {\r\n            console.log(responseJson);\r\n            if(responseJson.isError == true){\r\n                alert(responseJson.errorMsg);\r\n            } else {\r\n                // alert(responseJson.visitId)\r\n                let resObj = this.state.visitationForm;\r\n                console.log('/user/' + this.state.visitationForm.familyName);\r\n                resObj[\"visitId\"] = responseJson.visitId;\r\n                //sent to next page\r\n                this.props.history.push({\r\n                    pathname: '/user/' + this.state.visitationForm.familyName,\r\n                    state: { visitationData: resObj }\r\n                  })\r\n                \r\n            }\r\n        });\r\n    }\r\n    onClick(event, stringuser) {\r\n        console.log(\"Current Event\" + event);\r\n        console.log(\"Current User\" + stringuser);\r\n    }\r\n    render() {\r\n        return (\r\n            <PageTemplate>\r\n                <Row className=\"align-items-center justify-content-center\" style={{marginTop:\"25%\", textAlign:\"center\"}}>\r\n                    <Col className=\"w-100\">\r\n                        <form onSubmit={this.onSubmit} id=\"familyName-form\" className=\"w-100\">\r\n                            <Form.Control id=\"id-familyName\" type=\"text\" name=\"id-familyName\" placeholder=\"family name\" className=\"mb-2\" \r\n                            value={this.state.visitationForm.familyName} onChange={this.handleChange.bind(this, 'familyName')} required/>\r\n\r\n                            <Form.Control id=\"id-firstName\" type=\"text\" name=\"id-firstName\" placeholder=\"first name\" className=\"mb-2\" \r\n                            value={this.state.visitationForm.firstName} onChange={this.handleChange.bind(this, 'firstName')} required/>\r\n\r\n                            <Form.Control id=\"id-lastName\" type=\"text\" name=\"id-lastName\" placeholder=\"last name\" className=\"mb-2\" \r\n                            value={this.state.visitationForm.lastName} onChange={this.handleChange.bind(this, 'lastName')} required/>\r\n\r\n                            <Form.Group controlId=\"form.visitationSelect\" required>\r\n                                <Form.Control as=\"select\" value={this.state.visitationForm.visitationType} onChange={this.handleChange.bind(this, 'visitationType')}>\r\n                                <option value=\"\">Purpose of Visit</option>\r\n                                <option value=\"AHCCCS\">AHCCCS</option>\r\n                                <option value=\"WIC\">WIC</option>\r\n                                <option value=\"Food Bank\">Food Bank</option>\r\n                                <option value=\"FTF\">FTF (Classes)</option>\r\n                                <option value=\"Diapers\">Diapers</option>\r\n                                <option value=\"Medical\">Medical</option>\r\n                                <option value=\"Dental\">Dental</option>\r\n                                <option value=\"Immunizations\">Immunizations</option>\r\n                                <option value=\"Vision and Hearing\">Vision and Hearing</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Control id=\"id-dov\" type=\"date\" name=\"id-dov\" placeholder=\"Visit Date\" className=\"mb-2\" \r\n                            value={this.state.visitationForm.dov} onChange={this.handleChange.bind(this, 'dov')} required/>\r\n                            \r\n                            <Button type=\"submit\" className=\"mb-3\" style={{marginTop:\"5%\"}}>Submit</Button>\r\n                            {/* <Link to={{ pathname: \"/user/\" + this.state.familyName, state: { visitedDate: this.state.visitedDate, vistsLeft: this.state.vistsLeft } }}>Submit</Link> */}\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </PageTemplate>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../style/App.css';\r\nimport CreateUserPage from '../pages/CreateUserPage';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport CustomerSplashScreen from '../pages/CustomerSplashScreen';\r\nimport CustomerViewPage from '../pages/CustomerViewPage';\r\nimport FourOrFourError from '../pages/FourOrFourError';\r\nimport CustomerLoginPage from '../pages/CustomerLoginPage';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={CustomerSplashScreen} />\r\n        <Route  exact path=\"/user/:username\" component={CustomerViewPage} />\r\n        <Route path=\"/newuser\" component={CreateUserPage} />\r\n        <Route path=\"/login\" component={CustomerLoginPage} />\r\n        <Route component={FourOrFourError} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}